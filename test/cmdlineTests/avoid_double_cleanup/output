
======= avoid_double_cleanup/input.sol:C =======
EVM assembly:
    /* "avoid_double_cleanup/input.sol":35:305  contract C {... */
  mstore(0x40, 0x80)
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  0x00
  dup1
  revert
tag_1:
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "avoid_double_cleanup/input.sol":35:305  contract C {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      0x00
      dup1
      revert
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x26121ff0
      eq
      tag_3
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "avoid_double_cleanup/input.sol":50:303  function f() external {... */
    tag_3:
      tag_4
      tag_5
      jump	// in
    tag_4:
      stop
    tag_5:
        /* "avoid_double_cleanup/input.sol":82:101  bytes memory amount */
      0x60
        /* "avoid_double_cleanup/input.sol":111:131  bytes24 zero_bytes24 */
      0x00
        /* "avoid_double_cleanup/input.sol":141:163  bytes32 signature_root */
      dup1
        /* "avoid_double_cleanup/input.sol":173:185  bytes32 node */
      0x00
        /* "avoid_double_cleanup/input.sol":188:298  sha256(abi.encodePacked(... */
      0x02
        /* "avoid_double_cleanup/input.sol":225:287  sha256(abi.encodePacked(amount, zero_bytes24, signature_root)) */
      dup1
        /* "avoid_double_cleanup/input.sol":249:255  amount */
      dup6
        /* "avoid_double_cleanup/input.sol":257:269  zero_bytes24 */
      dup6
        /* "avoid_double_cleanup/input.sol":271:285  signature_root */
      dup6
        /* "avoid_double_cleanup/input.sol":232:286  abi.encodePacked(amount, zero_bytes24, signature_root) */
      add(0x20, mload(0x40))
      dup1
      dup5
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
    tag_7:
      0x20
      dup4
      lt
      tag_9
      jumpi
      dup1
      mload
      dup3
      mstore
      0x20
      dup3
      add
      swap2
      pop
      0x20
      dup2
      add
      swap1
      pop
      0x20
      dup4
      sub
      swap3
      pop
      jump(tag_7)
    tag_9:
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      dup1
      not
      dup3
      mload
      and
      dup2
      dup5
      mload
      and
      dup1
      dup3
      or
      dup6
      mstore
      pop
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
      add
      dup4
      not(0xffffffffffffffff)
      and
      not(0xffffffffffffffff)
      and
      dup2
      mstore
      0x18
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap4
      pop
      pop
      pop
      pop
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "avoid_double_cleanup/input.sol":225:287  sha256(abi.encodePacked(amount, zero_bytes24, signature_root)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
    tag_10:
      0x20
      dup4
      lt
      tag_12
      jumpi
      dup1
      mload
      dup3
      mstore
      0x20
      dup3
      add
      swap2
      pop
      0x20
      dup2
      add
      swap1
      pop
      0x20
      dup4
      sub
      swap3
      pop
      jump(tag_10)
    tag_12:
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      dup1
      not
      dup3
      mload
      and
      dup2
      dup5
      mload
      and
      dup1
      dup3
      or
      dup6
      mstore
      pop
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup6
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_14
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_14:
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_15
      jumpi
      0x00
      dup1
      revert
    tag_15:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "avoid_double_cleanup/input.sol":195:297  abi.encodePacked(... */
      add(0x20, mload(0x40))
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      0x20
      dup2
      dup4
      sub
      sub
      dup2
      mstore
      swap1
      0x40
      mstore
        /* "avoid_double_cleanup/input.sol":188:298  sha256(abi.encodePacked(... */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
    tag_16:
      0x20
      dup4
      lt
      tag_18
      jumpi
      dup1
      mload
      dup3
      mstore
      0x20
      dup3
      add
      swap2
      pop
      0x20
      dup2
      add
      swap1
      pop
      0x20
      dup4
      sub
      swap3
      pop
      jump(tag_16)
    tag_18:
      0x01
      dup4
      0x20
      sub
      0x0100
      exp
      sub
      dup1
      not
      dup3
      mload
      and
      dup2
      dup5
      mload
      and
      dup1
      dup3
      or
      dup6
      mstore
      pop
      pop
      pop
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup6
      gas
      staticcall
      iszero
      dup1
      iszero
      tag_20
      jumpi
      returndatasize
      0x00
      dup1
      returndatacopy
      revert(0x00, returndatasize)
    tag_20:
      pop
      pop
      pop
      mload(0x40)
      returndatasize
      0x20
      dup2
      lt
      iszero
      tag_21
      jumpi
      0x00
      dup1
      revert
    tag_21:
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "avoid_double_cleanup/input.sol":173:298  bytes32 node = sha256(abi.encodePacked(... */
      swap1
      pop
        /* "avoid_double_cleanup/input.sol":50:303  function f() external {... */
      pop
      pop
      pop
      pop
      jump	// out

    auxdata: AUXDATA REMOVED
}
